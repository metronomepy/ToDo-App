{"version":3,"sources":["assets/img/remove.svg","assets/img/close.svg","assets/img/edit.svg","assets/img/add.svg","components/Badge/index.jsx","components/List/index.jsx","components/AddList/index.jsx","components/Tasks/AddTasksForm.jsx","components/Tasks/Task.jsx","components/Tasks/index.jsx","App.js","index.js"],"names":["module","exports","Badge","color","onClick","className","classNames","List","items","isRemovable","onRemove","onClickItem","activeItem","map","item","index","key","active","id","icon","name","tasks","length","src","removeSvg","alt","window","confirm","axios","delete","then","removeList","AddList","colors","onAdd","useState","visiblePopup","setVisiblePopup","selectedColor","selectColor","inputValue","setInputValue","isLoading","setIsLoading","useEffect","Array","isArray","onClose","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","closeSvg","value","onChange","e","target","type","placeholder","post","colorId","data","filter","c","listObj","catch","alert","finally","AddTasksForm","list","onAddTask","visibleForm","setFormVisible","toggleFormVisible","disabled","obj","listId","text","completed","addSvg","Task","onEdit","onComplete","checked","htmlFor","Tasks","onEditTitle","withoutEmpty","onRemoveTask","onEditTask","onCompleteTask","to","style","hex","newTitle","prompt","patch","editSvg","task","App","lists","setLists","setColors","setActiveItem","history","useHistory","get","taskObj","newList","taskId","newTaskText","onEditListTitle","title","location","pathname","split","find","Number","push","newLists","exact","path","ReactDOM","render","class","document","getElementById"],"mappings":"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","file":"static/js/main.5d52d9fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/remove.95f30ee9.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.cf3d8dbc.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.e6d3868a.svg\";","module.exports = __webpack_public_path__ + \"static/media/add.04bce1ba.svg\";","import React from \"react\";\r\nimport './Badge.scss';\r\nimport classNames from 'classnames'\r\n\r\nconst Badge = ({ color, onClick, className }) => (\r\n    <i onClick={onClick} className={classNames('badge', { [`badge--${color}`]: color }, className)} />\r\n);\r\n\r\nexport default Badge;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport axios from 'axios';\r\n\r\n\r\nimport removeSvg from '../../assets/img/remove.svg';\r\n\r\nimport Badge from '../Badge';\r\n\r\nimport './List.scss';\r\n\r\nconst List = ({\r\n    items,\r\n    isRemovable,\r\n    onClick,\r\n    onRemove,\r\n    onClickItem,\r\n    activeItem\r\n}) => {\r\n    const removeList = item => {\r\n        if (window.confirm('Are you sure you want to delete the list?')) {\r\n            axios.delete('http://localhost:3001/lists/' + item.id).then(() => {\r\n                onRemove(item.id);\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ul onClick={onClick} className=\"list\">\r\n            {items.map((item, index) => (\r\n                <li\r\n                    key={index}\r\n                    className={classNames(item.className, {\r\n                        active: item.active\r\n                            ? item.active\r\n                            : activeItem && activeItem.id === item.id\r\n                    })}\r\n                    onClick={onClickItem ? () => onClickItem(item) : null}\r\n                >\r\n                    <i>{item.icon ? item.icon : <Badge color={item.color.name} />}</i>\r\n                    <span>\r\n                        {item.name}\r\n                        {item.tasks && ` (${item.tasks.length})`}\r\n                    </span>\r\n                    {isRemovable && (\r\n                        <img\r\n                            className=\"list__remove-icon\"\r\n                            src={removeSvg}\r\n                            alt=\"Remove icon\"\r\n                            onClick={() => removeList(item)}\r\n                        />\r\n                    )}\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default List;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from 'axios'\r\n\r\nimport List from \"../List\";\r\nimport Badge from \"../Badge\";\r\n\r\nimport closeSvg from '../../assets/img/close.svg'\r\n\r\nimport './AddButtonList.scss'\r\n\r\nconst AddList = ({ colors, onAdd }) => {\r\n\r\n    const [visiblePopup, setVisiblePopup] = useState(false);\r\n    const [selectedColor, selectColor] = useState(3);\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(colors)) {\r\n            selectColor(colors[0].id)\r\n        }\r\n    }, [colors]);\r\n\r\n    const onClose = () => {\r\n        setVisiblePopup(false);\r\n        setInputValue('');\r\n        selectColor(colors[0].id);\r\n    };\r\n    const addList = () => {\r\n        if (!inputValue) {\r\n            alert('Enter list name');\r\n            return;\r\n        }\r\n        setIsLoading(true);\r\n        axios\r\n            .post('http://localhost:3001/lists', { name: inputValue, colorId: selectedColor })\r\n            .then(({ data }) => {\r\n                const color = colors.filter(c => c.id === selectedColor)[0];\r\n                const listObj = { ...data, color, tasks: [] };\r\n                onAdd(listObj);\r\n                onClose();\r\n\r\n            })\r\n            .catch(() => {\r\n                alert('Error adding list')\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            })\r\n    };\r\n\r\n    return (\r\n        <div className='add-list'>\r\n            <List\r\n                onClick={() => setVisiblePopup(true)}\r\n                items={[\r\n                    {\r\n                        className: \"list__add-button\",\r\n                        icon: <svg width=\"12\"\r\n                            height=\"12\"\r\n                            viewBox=\"0 0 16 16\"\r\n                            fill=\"none\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                            <path d=\"M8 1V15\" stroke=\"black\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                            <path d=\"M1 8H15\" stroke=\"black\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                        </svg>,\r\n                        name: \"Add list\"\r\n                    }\r\n                ]}\r\n            />\r\n            {visiblePopup && <div className=\"add-list__popup\">\r\n                <img onClick={onClose}\r\n                    src={closeSvg}\r\n                    alt=\"Close button\"\r\n                    className=\"add-list__popup-close-btn\" />\r\n                <input value={inputValue}\r\n                    onChange={e => setInputValue(e.target.value)}\r\n                    className={'field'}\r\n                    type={'text'}\r\n                    placeholder={'List name'} />\r\n\r\n                <div className=\"add-list__popup-colors\">\r\n                    {\r\n                        colors.map(color =>\r\n                            <Badge\r\n                                onClick={() => selectColor(color.id)}\r\n                                key={color.id}\r\n                                color={color.name}\r\n                                className={selectedColor === color.id && 'active'}\r\n                            />)\r\n                    }\r\n                </div>\r\n\r\n                <button onClick={addList} className={'button'}>\r\n                    {isLoading ? 'Adding...' : 'Add'}\r\n                </button>\r\n            </div>}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default AddList;","import React, { useState } from 'react';\r\nimport axios from 'axios'\r\n\r\nimport addSvg from '../../assets/img/add.svg';\r\n\r\n\r\n\r\nconst AddTasksForm = ({ list, onAddTask }) => {\r\n\r\n    const [visibleForm, setFormVisible] = useState(false);\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [isLoading, setIsLoading] = useState('');\r\n\r\n    const toggleFormVisible = () => {\r\n        setFormVisible(!visibleForm);\r\n        setInputValue('');\r\n    };\r\n\r\n    const addTask = () => {\r\n        const obj = {\r\n            listId: list.id,\r\n            text: inputValue,\r\n            completed: false\r\n        };\r\n        setIsLoading(true);\r\n        axios\r\n            .post('http://localhost:3001/tasks', obj)\r\n            .then(({ data }) => {\r\n                onAddTask(list.id, data);\r\n                toggleFormVisible();\r\n            })\r\n            .catch(() => {\r\n                alert('Error adding')\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n\r\n    };\r\n    return (\r\n        <div className={\"tasks__form\"}>\r\n            {!visibleForm ? <div onClick={toggleFormVisible} className=\"tasks__form-new\">\r\n                <img src={addSvg} alt=\"Add icon\" />\r\n                <span>New task</span>\r\n            </div> : <div className=\"tasks__form-block\">\r\n                    <input\r\n                        value={inputValue} className={'field'}\r\n                        type={'text'}\r\n                        placeholder={'Task text'}\r\n                        onChange={e => setInputValue(e.target.value)}\r\n\r\n                    />\r\n                    <button disabled={isLoading} onClick={addTask} className={'button'}>{isLoading ? 'Adding...' : 'Add task'}</button>\r\n                    <button onClick={toggleFormVisible} className={'button button--grey'}>Cancel</button>\r\n                </div>}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default AddTasksForm;","import React from 'react';\r\n\r\nconst Task = ({ id, text, completed, onRemove, onEdit, list, onComplete }) => {\r\n    const onChangeCheckBox = e => {\r\n        onComplete(list.id, id, e.target.checked);\r\n    };\r\n\r\n    return (\r\n        <div key={id} className=\"tasks__items-row\">\r\n            <div className=\"checkbox\">\r\n                <input\r\n                    onChange={onChangeCheckBox}\r\n                    id={`task-${id}`}\r\n                    type=\"checkbox\"\r\n                    checked={completed} />\r\n                <label htmlFor={`task-${id}`}>\r\n                    <svg\r\n                        width=\"11\"\r\n                        height=\"8\"\r\n                        viewBox=\"0 0 11 8\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            d=\"M9.29999 1.20001L3.79999 6.70001L1.29999 4.20001\"\r\n                            stroke=\"#000\"\r\n                            strokeWidth=\"1.5\"\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                        />\r\n                    </svg>\r\n\r\n                </label>\r\n            </div>\r\n            <p>{text}</p>\r\n            <div className=\"tasks__items-row-actions\">\r\n                <div onClick={() => onEdit(list.id, { id, text })}>\r\n                    <svg width=\"15\"\r\n                        height=\"15\"\r\n                        viewBox=\"0 0 15 15\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M0 12.0504V14.5834C0 14.8167 0.183308 15 0.41661 15H2.9496C3.05792 15 3.16624 14.9583 3.24123 14.875L12.34 5.78458L9.21542 2.66001L0.124983 11.7504C0.0416611 11.8338 0 11.9337 0 12.0504ZM14.7563 3.36825C14.8336 3.29116 14.8949 3.1996 14.9367 3.0988C14.9785 2.99801 15 2.88995 15 2.78083C15 2.6717 14.9785 2.56365 14.9367 2.46285C14.8949 2.36205 14.8336 2.27049 14.7563 2.19341L12.8066 0.24367C12.7295 0.166428 12.638 0.105146 12.5372 0.0633343C12.4364 0.021522 12.3283 0 12.2192 0C12.1101 0 12.002 0.021522 11.9012 0.0633343C11.8004 0.105146 11.7088 0.166428 11.6318 0.24367L10.107 1.76846L13.2315 4.89304L14.7563 3.36825V3.36825Z\" fill=\"black\" />\r\n                    </svg>\r\n                </div>\r\n                <div onClick={() => onRemove(list.id, id)}>\r\n                    <svg width=\"11\"\r\n                        height=\"11\"\r\n                        viewBox=\"0 0 11 11\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M6.87215 5.5L10.7129 1.65926C10.8952 1.47731 10.9977 1.23039 10.9979 0.972832C10.9982 0.715276 10.8961 0.468178 10.7141 0.285898C10.5321 0.103617 10.2852 0.00108525 10.0277 0.000857792C9.77011 0.000630336 9.52302 0.102726 9.34074 0.284685L5.5 4.12542L1.65926 0.284685C1.47698 0.102404 1.22976 0 0.971974 0C0.714191 0 0.466965 0.102404 0.284685 0.284685C0.102404 0.466965 0 0.714191 0 0.971974C0 1.22976 0.102404 1.47698 0.284685 1.65926L4.12542 5.5L0.284685 9.34074C0.102404 9.52302 0 9.77024 0 10.028C0 10.2858 0.102404 10.533 0.284685 10.7153C0.466965 10.8976 0.714191 11 0.971974 11C1.22976 11 1.47698 10.8976 1.65926 10.7153L5.5 6.87458L9.34074 10.7153C9.52302 10.8976 9.77024 11 10.028 11C10.2858 11 10.533 10.8976 10.7153 10.7153C10.8976 10.533 11 10.2858 11 10.028C11 9.77024 10.8976 9.52302 10.7153 9.34074L6.87215 5.5Z\" fill=\"black\" />\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Task;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport editSvg from '../../assets/img/edit.svg';\r\nimport './Tasks.scss';\r\nimport AddTasksForm from \"./AddTasksForm\";\r\nimport Task from './Task';\r\n\r\nconst Tasks = ({\r\n    list,\r\n    onEditTitle,\r\n    onAddTask,\r\n    withoutEmpty,\r\n    onRemoveTask,\r\n    onEditTask,\r\n    onCompleteTask\r\n\r\n}) => {\r\n\r\n    const editTitle = () => {\r\n        const newTitle = window.prompt('List name', list.name);\r\n        if (newTitle) {\r\n            onEditTitle(list.id, newTitle);\r\n            axios.patch('http://localhost:3001/lists/' + list.id, {\r\n                name: newTitle\r\n            }).catch(() => {\r\n                alert('Name list update failed');\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"tasks\">\r\n            <Link to={`/lists/${list.id}`}>\r\n                <h2 style={{ color: list.color.hex }} className=\"tasks__title\">\r\n                    {list.name}\r\n                    <img onClick={editTitle}\r\n                        src={editSvg} alt=\"Edit icon\" />\r\n                </h2>\r\n            </Link>\r\n\r\n            <div className=\"tasks__items\">\r\n                {!withoutEmpty && list.tasks && !list.tasks.length && <h2>No tasks</h2>}\r\n                {list.tasks && list.tasks.map(task => (\r\n                    <Task key={task.id}\r\n                        onEdit={onEditTask}\r\n                        list={list}\r\n                        onRemove={onRemoveTask} {...task}\r\n                        onComplete={onCompleteTask}\r\n                    />\r\n                ))}\r\n\r\n                <AddTasksForm key={list.id} list={list} onAddTask={onAddTask} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tasks;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Route, useHistory } from \"react-router-dom\";\n\n\nimport { List, AddList, Tasks } from './components';\n\nfunction App() {\n    const [lists, setLists] = useState(null);\n    const [colors, setColors] = useState(null);\n    const [activeItem, setActiveItem] = useState(null);\n    let history = useHistory();\n\n    useEffect(() => {\n        axios\n            .get('http://localhost:3001/lists?_expand=color&_embed=tasks')\n            .then(({ data }) => {\n                setLists(data);\n            });\n        axios.get('http://localhost:3001/colors').then(({ data }) => {\n            setColors(data);\n        });\n    }, []);\n\n    const onAddList = obj => {\n        const newList = [...lists, obj];\n        setLists(newList);\n    };\n\n    const onAddTask = (listId, taskObj) => {\n        const newList = lists.map(item => {\n            if (item.id === listId) {\n                item.tasks = [...item.tasks, taskObj]\n            }\n            return item;\n        });\n        setLists(newList);\n    };\n\n    const onRemoveTask = (listId, taskId) => {\n        if (window.confirm('Are you sure you want to delete the task?')) {\n            const newList = lists.map(item => {\n                if (item.id === listId) {\n                    item.tasks = item.tasks.filter(task => task.id !== taskId)\n                }\n                return item;\n            });\n            setLists(newList);\n            axios.delete('http://localhost:3001/tasks/' + taskId).catch(() => {\n                alert('Task delete failed ');\n            });\n        }\n    };\n\n    const onEditTask = (listId, taskObj) => {\n        const newTaskText = window.prompt('Task text', taskObj.text)\n\n        if (!newTaskText) {\n            return;\n        }\n        const newList = lists.map(list => {\n            if (list.id === listId) {\n                list.tasks = list.tasks.map(task => {\n                    if (task.id === taskObj.id) {\n                        task.text = newTaskText;\n                    }\n                    return task;\n                });\n            }\n            return list;\n        });\n        setLists(newList);\n        axios\n            .patch('http://localhost:3001/tasks/' + taskObj.id, {\n                text: newTaskText\n            })\n            .catch(() => {\n                alert('Task edit failed');\n            });\n    };\n\n    const onEditListTitle = (id, title) => {\n        const newList = lists.map(item => {\n            if (item.id === id) {\n                item.name = title;\n            }\n            return item;\n        });\n        setLists(newList);\n\n    };\n\n    const onCompleteTask = (listId, taskId, completed) => {\n        const newList = lists.map(list => {\n            if (list.id === listId) {\n                list.tasks = list.tasks.map(task => {\n                    if (task.id === taskId) {\n                        task.completed = completed;\n                    }\n                    return task;\n                });\n            }\n            return list;\n        });\n        setLists(newList);\n        axios\n            .patch('http://localhost:3001/tasks/' + taskId, {\n                completed\n            })\n            .catch(() => {\n                alert('Task edit failed');\n            });\n    }\n\n    useEffect(() => {\n        const listId = history.location.pathname.split('lists/')[1];\n        if (lists) {\n            const list = lists.find(list => list.id === Number(listId));\n            setActiveItem(list);\n        }\n    }, [lists, history.location.pathname]);\n\n    return (\n        <div className=\"todo\">\n            <div className=\"todo__sidebar\">\n                <List\n                    onClickItem={list => {\n                        history.push(`/`);\n                    }}\n                    items={[\n                        {\n                            active: history.location.pathname === '/',\n                            icon: (\n                                <svg\n                                    width=\"18\"\n                                    height=\"18\"\n                                    viewBox=\"0 0 18 18\"\n                                    fill=\"none\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                >\n                                    <path\n                                        d=\"M12.96 8.10001H7.74001C7.24321 8.10001 7.20001 8.50231 7.20001 9.00001C7.20001 9.49771 7.24321 9.90001 7.74001 9.90001H12.96C13.4568 9.90001 13.5 9.49771 13.5 9.00001C13.5 8.50231 13.4568 8.10001 12.96 8.10001V8.10001ZM14.76 12.6H7.74001C7.24321 12.6 7.20001 13.0023 7.20001 13.5C7.20001 13.9977 7.24321 14.4 7.74001 14.4H14.76C15.2568 14.4 15.3 13.9977 15.3 13.5C15.3 13.0023 15.2568 12.6 14.76 12.6ZM7.74001 5.40001H14.76C15.2568 5.40001 15.3 4.99771 15.3 4.50001C15.3 4.00231 15.2568 3.60001 14.76 3.60001H7.74001C7.24321 3.60001 7.20001 4.00231 7.20001 4.50001C7.20001 4.99771 7.24321 5.40001 7.74001 5.40001ZM4.86001 8.10001H3.24001C2.74321 8.10001 2.70001 8.50231 2.70001 9.00001C2.70001 9.49771 2.74321 9.90001 3.24001 9.90001H4.86001C5.35681 9.90001 5.40001 9.49771 5.40001 9.00001C5.40001 8.50231 5.35681 8.10001 4.86001 8.10001ZM4.86001 12.6H3.24001C2.74321 12.6 2.70001 13.0023 2.70001 13.5C2.70001 13.9977 2.74321 14.4 3.24001 14.4H4.86001C5.35681 14.4 5.40001 13.9977 5.40001 13.5C5.40001 13.0023 5.35681 12.6 4.86001 12.6ZM4.86001 3.60001H3.24001C2.74321 3.60001 2.70001 4.00231 2.70001 4.50001C2.70001 4.99771 2.74321 5.40001 3.24001 5.40001H4.86001C5.35681 5.40001 5.40001 4.99771 5.40001 4.50001C5.40001 4.00231 5.35681 3.60001 4.86001 3.60001Z\"\n                                        fill=\"black\"\n                                    />\n                                </svg>\n                            ),\n                            name: 'All tasks'\n                        }\n                    ]}\n                />\n                {lists ? (\n                    <List\n                        items={lists}\n                        onRemove={id => {\n                            const newLists = lists.filter(item => item.id !== id);\n                            setLists(newLists);\n                        }}\n                        onClickItem={list => {\n                            history.push(`/lists/${list.id}`);\n                        }}\n                        activeItem={activeItem}\n                        isRemovable\n                    />\n                ) : (\n                        'Loading...'\n                    )}\n                <AddList onAdd={onAddList} colors={colors} />\n            </div>\n            <div className=\"todo__tasks\">\n                <Route exact path={\"/\"}>\n                    {lists &&\n                        lists.map(list =>\n                            <Tasks\n                                key={list.id}\n                                list={list}\n                                onAddTask={onAddTask}\n                                onEditTitle={onEditListTitle}\n                                onRemoveTask={onRemoveTask}\n                                onEditTask={onEditTask}\n                                onCompleteTask={onCompleteTask}\n                                withoutEmpty\n                            />\n                        )}\n                </Route>\n                <Route path=\"/lists/:id\">\n                    {lists && activeItem &&\n                        <Tasks list={activeItem}\n                            onAddTask={onAddTask}\n                            onEditTitle={onEditListTitle}\n                            onRemoveTask={onRemoveTask}\n                            onEditTask={onEditTask}\n                            onCompleteTask={onCompleteTask}\n                        />}\n                </Route>\n\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter  as Router} from 'react-router-dom'\n\nimport './index.scss' ;\n\nReactDOM.render(\n    <Router>\n        <App />\n        .<small class=\"text-muted\"></small>    \n    </Router>\n    , document.getElementById('root'));\n"],"sourceRoot":""}